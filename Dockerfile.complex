# Multi-stage build otimizado para Railway
FROM node:18-alpine AS base

# Instalar dependências necessárias
RUN apk add --no-cache libc6-compat
WORKDIR /app

# Copiar arquivos de dependências
COPY package*.json ./
COPY apps/backend/package*.json ./apps/backend/
COPY apps/web/package*.json ./apps/web/
COPY packages/shared/package*.json ./packages/shared/

# Stage 1: Build shared package
FROM base AS shared-builder
WORKDIR /app/packages/shared
RUN npm install --only=production
COPY packages/shared/ .
RUN npm run build

# Stage 2: Build backend
FROM base AS backend-builder
WORKDIR /app/apps/backend
COPY --from=shared-builder /app/packages/shared/dist ./node_modules/@msgsystec/shared
RUN npm install --only=production
COPY apps/backend/ .
RUN npm run build

# Stage 3: Build frontend
FROM base AS frontend-builder
WORKDIR /app/apps/web
COPY --from=shared-builder /app/packages/shared/dist ./node_modules/@msgsystec/shared
RUN npm install --only=production
COPY apps/web/ .
RUN npm run build

# Stage 4: Production
FROM node:18-alpine AS runner
WORKDIR /app

# Criar usuário não-root para segurança
RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 nextjs

# Instalar apenas dependências de produção
COPY --from=base /app/package*.json ./
COPY --from=base /app/apps/backend/package*.json ./apps/backend/
RUN npm install --only=production --workspace=apps/backend

# Copiar builds
COPY --from=backend-builder --chown=nextjs:nodejs /app/apps/backend/dist ./apps/backend/dist
COPY --from=frontend-builder --chown=nextjs:nodejs /app/apps/web/.next/standalone ./
COPY --from=frontend-builder --chown=nextjs:nodejs /app/apps/web/.next/static ./apps/web/.next/static
COPY --from=shared-builder --chown=nextjs:nodejs /app/packages/shared/dist ./packages/shared/dist

# Configurar usuário
USER nextjs

# Expor porta
EXPOSE 3001

# Variáveis de ambiente
ENV NODE_ENV=production
ENV PORT=3001

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD node -e "require('http').get('http://localhost:3001/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"

# Comando de inicialização
CMD ["node", "apps/backend/dist/main.js"]